---
- name: Inclusion des variables OS specific
  include_vars: "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"

- name: Selecting release to install from
  set_fact:
    lxd_apt_release: "{{ lxd_lts_apt_release }}"
  when: "lxd_use_lts"

- name: Installation des packages lxd
  apt:
    name: "{{ item }}"
    state: latest
    default_release: "{{ lxd_apt_release }}"
    update_cache: yes
  with_items: "{{ lxd_apt_packages }}"

- name: Création du storage default
  shell: "lxc storage create default dir source=/var/lib/lxd/storage-pools/default"
  register: default_storage_add
  changed_when: "default_storage_add.rc == 0"
  failed_when: "default_storage_add.rc != 0 and 'already exists' not in default_storage_add.stderr"
  when: "not lxd_use_lts"

- name: Création des networks
  lxd_network:
    name: "{{ item.name }}"
    state: "present"
    config: "{{ item.config }}"
    description: "{{ item.description }}"
  with_items: "{{ lxd_deploy_networks }}"
  when: "not lxd_use_lts"

- name: Création des profiles
  lxd_profile:
    name: "{{ item.name }}"
    state: "present"
    config: "{{ item.config }}"
    devices: "{{ item.devices }}"
    description: "{{ item.description }}"
  with_items: "{{ lxd_deploy_profiles }}"

- name: Création des containers
  lxd_container:
    name: "{{ item.name }}"
    state: started
    source:
      type: image
      mode: pull
      server: https://images.linuxcontainers.org
      protocol: simplestreams
      alias: "{{ item.alias }}"
    profiles: "{{ item.profiles | default({}) }}"
    devices: "{{ item.devices | default({}) }}"
    wait_for_ipv4_addresses: true
  with_items: "{{ lxd_deploy_containers }}"
  register: add_lxd_container

- name: Ajout des containers créés à l'inventaire dynamique
  add_host:
    name: "{{ item.item.name }}"
    ansible_connection: lxd
  with_items: "{{ add_lxd_container.results }}"
  when: "'create' in item.actions"
  changed_when: None
  loop_control:
    label: "{{ item.item.name }}"

- name: Installation de python sur les containers CentOS
  raw: yum -y install python
  delegate_to: "{{ item.item.name }}"
  with_items: "{{ add_lxd_container.results }}"
  when:
    - "'create' in item.actions"
    - "'centos' in item.item.alias"
  become: false

- name: Installation de python sur les containers Debian
  raw: apt-get update && apt-get -y install python ca-certificates
  delegate_to: "{{ item.item.name }}"
  with_items: "{{ add_lxd_container.results }}"
  when:
    - "'create' in item.actions"
    - "'ubuntu' in item.item.alias or 'debian' in item.item.alias"
  become: false

- name: Installation de gpg pour Debian 9 et le module apt_key
  raw: apt-get -y install gpg
  delegate_to: "{{ item.item.name }}"
  with_items: "{{ add_lxd_container.results }}"
  when:
    - "'create' in item.actions"
    - "'stretch' in item.item.alias"
  become: false
