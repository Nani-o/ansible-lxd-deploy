---
- block:
    - name: restart debug
      systemd:
        name: snap.lxd
        state: restarted

    - name: Create containers
      lxd_container:
        name: "{{ item.name }}"
        state: started
        source:
          type: "{{ item.type | default('image') }}"
          mode: "{{ item.mode | default('pull') }}"
          server: "{{ item.server | default('https://images.linuxcontainers.org') }}"
          protocol: "{{ item.protocol | default('simplestreams') }}"
          alias: "{{ item.alias }}"
        profiles: "{{ item.profiles | default({}) }}"
        devices: "{{ item.devices | default({}) }}"
        wait_for_ipv4_addresses: true
        url: "{{ lxd_url }}"
      with_items: "{{ lxd_containers }}"
      when: "lxd_containers is defined"

    - name: Add containers to dynamic inventory
      add_host:
        name: "{{ item.name }}"
        ansible_connection: lxd
      with_items: "{{ lxd_containers }}"
      changed_when: false
      loop_control:
        label: "{{ item.name }}"

    - name: Installing python if absent
      raw: |
        if [[ -f /etc/debian_version && ! -f /usr/bin/python ]]
        then
            apt-get -y update
            apt-get -y install python 
            apt-get -y install systemd ca-certificates gnupg-curl || apt-get -y install systemd ca-certificates gnupg1-curl
        elif [[ -f /etc/redhat-release && ! -f /usr/bin/python ]]
        then
            yum -y install python
        else
            echo "OK"
        fi
      args:
        executable: /bin/bash
      with_items: "{{ lxd_containers }}"
      delegate_to: "{{ item.name }}" 
      register: python_install
      changed_when: "'OK' not in python_install.stdout"
      become: false
      environment:
        PATH: "/snap/bin:$PATH"
  tags: lxd_deploy
